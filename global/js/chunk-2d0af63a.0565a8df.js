(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0af63a"],{"0db2":function(t,e,a){"use strict";a.r(e);var l=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("BaseControl",t._b({attrs:{errors:t.combinedErrors}},"BaseControl",t.$attrs,!1),[a("b-btn",{attrs:{variant:"primary",block:""},on:{click:t.openPolygonControl}},[a("i",{staticClass:"far fa-map"}),t._v(" "+t._s(t.value?"Кўриш":"Белгилаш")+" ")])],1)},o=[],n=a("98d1"),i=a("7f3d"),s=a("e117"),r=a("be1f"),u=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("Modal",{attrs:{"footer-actions":t.actions,"slot-class":"d-flex flex-grow-1"},scopedSlots:t._u([{key:"title",fn:function(){return[a("i",{staticClass:"far fa-map"}),t._v(" "+t._s(t.title))]},proxy:!0}])},[a("MapPolygon",{ref:"polygon",staticClass:"flex-grow-1",staticStyle:{"min-height":"calc(90vh - 150px)"},attrs:{edit:t.isEditable,"default-map-center":t.defaultMapCenter,"is-multiple":t.isMultiple,"extra-polygons":t.extraPolygons,"extra-polygon-style":t.extraPolygonStyle,"default-map-zoom":t.defaultMapZoom},on:{drawing:function(e){return t.isDrawing=e},"selected-area":function(e){return t.selectedArea=e}},model:{value:t.local,callback:function(e){t.local=e},expression:"local"}})],1)},c=[],d=a("02f0"),p=a("5058"),h={name:"MapPolygonModal",components:{MapPolygon:p["default"],Modal:d["a"]},props:{value:{},onValue:{},isEditable:{default:!1,type:Boolean},defaultMapCenter:{},defaultMapZoom:{},extraPolygons:{},extraPolygonStyle:{},isMultiple:{}},data(){return{local:this.value,isDrawing:!1,selectedArea:0}},computed:{title(){return this.local?this.$l("platon.edit","Таҳрирлаш"):this.$l("platon.pick","Белгилаш")},actions(){return[{text:this.$l("platon.save","Сақлаш"),disabled:this.isDrawing,handler:()=>{this.onValue&&this.onValue(this.local,this.selectedArea)}},{text:this.$l("platon.cancel","Бекор қилиш"),handler:()=>{}}]}}},f=h,m=a("2877"),g=Object(m["a"])(f,u,c,!1,null,null,null),y=g.exports,M=a("94ae"),x=a.n(M);window.AREA_MEASUREMENTS={GA:1e4};var v={name:"MapPolygonControl",components:{Btn:i["a"],BaseControl:n["a"]},mixins:[s["a"],r["a"]],methods:{openPolygonControl(){this.$modal.show(y,{value:this.value,isEditable:!this.readonly,defaultMapCenter:this.item.mapCenter,defaultMapZoom:this.item.mapZoom,extraPolygons:this.item.extraPolygons,extraPolygonStyle:this.item.extraPolygonStyle,isMultiple:this.isMultiple,onValue:(t,e)=>{this.$emit("input",t),this.$parent.$emit("area-selected",e),this.updateLocal(t)}},{width:"90%",height:"90%"})},getArea(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:AREA_MEASUREMENTS.GA,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;if(this.value&&this.value.coordinates){let a=0;for(let t of this.value.coordinates){const e=this.formatCoords(t);a+=x.a.GeometryUtil.geodesicArea(e)}return e>0?(a/t).toFixed(e):a/t}return 0},formatCoords(t){if(t.length>0){let e=t[0];if(Array.isArray(e))return t.map(t=>({lat:t[1],lng:t[0]}))}return t}},computed:{isMultiple(){return!!this.item.isMultiple}}},b=v,w=Object(m["a"])(b,l,o,!1,null,null,null);e["default"]=w.exports}}]);
(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c7374"],{5058:function(e,t,a){"use strict";a.r(t);var r=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticStyle:{width:"100%",border:"1px solid #ccc"},attrs:{id:"map"}})},o=[],n=a("b17c"),i=a.n(n),l=a("448a"),s=a.n(l),d=a("94ae"),g=a.n(d),p=(a("6cc5"),a("20d6"),a("5fbf"),a("b441")),h=a("e117"),y=a("e848"),u={name:"MapPolygon",mixins:[h["a"]],data(){return{drawingLayer:null,externalPolygonLayer:null,map:null,drawing:!1}},props:{edit:{type:Boolean,default:!0},defaultMapCenter:{},defaultMapZoom:{},extraPolygons:{},extraPolygonStyle:{default:()=>({fillColor:"rgba(255,0,0,0.35)",color:"#ff0000"})},isMultiple:{type:Boolean,default:!1}},created(){g.a.drawLocal=y["a"]},mounted(){this.renderMap()},methods:{renderMap(){this.setupMap(),this.edit&&this.addDrawingControl(),this.registerMapEvents(),this.renderExternalPolygonFromJson(),this.renderPolygonFromInput()},getMapCenter(){try{return i()(g.a.LatLng,s()(this.defaultMapCenter.split(",")))}catch(e){return i()(g.a.LatLng,s()(p["DEFAULT_MAP_CENTER"]))}},getMapZoom(){let e=Number(this.defaultMapZoom);return Number.isInteger(e)?e:13},renderPolygonFromJson(e){new g.a.GeoJSON(e,{onEachFeature:(e,t)=>{t.addTo(this.drawingLayer);(g.a.GeometryUtil.geodesicArea(t.getLatLngs()[0])/1e4).toFixed(2)}});this.map.fitBounds(this.drawingLayer.getBounds())},addDrawingControl(){this.map.addControl(new g.a.Control.Draw({edit:{featureGroup:this.drawingLayer,poly:{allowIntersection:!1}},draw:{polyline:!1,polygon:{allowIntersection:!1,showArea:!0,drawError:{color:"#b00b00",timeout:1e3},shapeOptions:{}},circle:!1,circlemarker:!1,marker:!1,rectangle:!1}}))},setupMap(){this.map=new g.a.Map("map",{center:this.getMapCenter(),zoom:this.getMapZoom()}),this.drawingLayer=g.a.featureGroup().addTo(this.map),this.externalPolygonLayer=g.a.featureGroup().addTo(this.map);let e=g.a.tileLayer("http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}",{maxZoom:20,subdomains:["mt0","mt1","mt2","mt3"],attribution:"google"}),t=g.a.tileLayer("http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}",{maxZoom:20,subdomains:["mt0","mt1","mt2","mt3"],attribution:"google"}),a=g.a.tileLayer("http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{maxZoom:18,attribution:'&copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap</a> contributors'});g.a.control.layers({osm:a.addTo(this.map),googleSat:e,googleStreets:t},{[this.$l("platon.mappolygon.drawinglayer","Чизмалар")]:this.drawingLayer,[this.$l("platon.mappolygon.externalpolygonlayer","Ташқи чизмалар")]:this.externalPolygonLayer},{position:"topright",collapsed:!1}).addTo(this.map)},getVolumeOfShapeByLatLng(e){return+(g.a.GeometryUtil.geodesicArea(e)/1e4).toFixed(2)},registerMapEvents(){let e=this.map;e.on(g.a.Draw.Event.CREATED,e=>{this.isMultiple||this.drawingLayer.clearLayers();e.layerType;let t=e.layer;this.drawingLayer.addLayer(t);var a=this.getVolumeOfShapeByLatLng(t.getLatLngs()[0]);this.saveHec(a)}),e.on(g.a.Draw.Event.DRAWSTART,e=>{this.drawing=!0}),e.on(g.a.Draw.Event.DRAWSTOP,e=>{this.drawing=!1,this.emitValue()}),e.on(g.a.Draw.Event.EDITSTART,e=>{this.drawing=!0}),e.on(g.a.Draw.Event.EDITSTOP,e=>{this.drawing=!1,this.emitValue()}),e.on(g.a.Draw.Event.DELETED,e=>{this.drawing=!1,this.emitValue()}),e.on(g.a.Draw.Event.EDITED,e=>{var t,a=e.layers;a.eachLayer(e=>{t=(g.a.GeometryUtil.geodesicArea(e.getLatLngs()[0])/1e4).toFixed(2),this.saveHec(t)})})},renderPolygonFromInput(){if(!this.value)return;let e=Array.isArray(this.value)?this.value:[this.value],t=e.map(e=>({type:"Feature",properties:{},geometry:e})),a={type:"FeatureCollection",features:t};this.drawingLayer.clearLayers(),this.renderPolygonFromJson(a)},emitValue(){let e=this.drawingLayer.toGeoJSON();if(Array.isArray(e.features)&&e.features.length>0){let t;t=this.isMultiple?e.features.map(e=>e.geometry):e.features[0].geometry,this.$emit("input",t),this.$emit("selected-area",this.getAreaFromSelected())}else this.$emit("input",null),this.$emit("selected-area",0)},saveHec(e){},getAreaFromSelected(){let e=0;return this.drawingLayer.eachLayer(t=>{e+=this.getVolumeOfShapeByLatLng(t.getLatLngs()[0])}),e},renderExternalPolygonFromJson(){const e=this.extraPolygons;if(null==e)return;let t={type:"FeatureCollection",features:e};new g.a.GeoJSON(t,{style:this.extraPolygonStyle,onEachFeature:(e,t)=>{e.label&&t.bindTooltip(e.label,{permanent:!0,direction:"center"}).openTooltip(),t.addTo(this.externalPolygonLayer)}});this.value||this.map.fitBounds(this.externalPolygonLayer.getBounds())}},watch:{value:{handler(){null!=this.map&&this.renderPolygonFromInput()}},extraPolygons:{handler(){null!=this.map&&this.renderExternalPolygonFromJson()}},drawing(e){this.$emit("drawing",e)}}},m=u,c=a("2877"),w=Object(c["a"])(m,r,o,!1,null,null,null);t["default"]=w.exports}}]);